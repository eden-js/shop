<order-row>
  <div class="card card-order mb-3">
    <div class="card-body">
      <div class="row row-eq-height">
        <div class="col-lg-2 text-overflow d-flex align-items-center">
          <div class="w-100 text-overflow">
            <i class={ classes({ 'fa fa-circle mr-2' : true, 'text-success' : props.row.get('invoice').paid && props.row.get('status') !== 'completed', 'text-info' : props.row.get('status') === 'paid', 'text-danger' : !props.row.get('invoice').paid }) } />
            { props.row.get('id') }
          </div>
        </div>
        <div class="col-lg-2 text-overflow d-flex align-items-center">
          <div class="w-100">
            <span class={ classes({ 'badge' : true, 'badge-danger' : !props.row.get('invoice').paid, 'badge-success' : props.row.get('invoice').paid }) }>
              { props.row.get('invoice').paid ? 'Paid' : 'Unpaid' }
            </span>
            ${ props.row.get('invoice').total.toFixed(2) } { props.row.get('invoice').currency }<br />
            <span class="text-muted">
              Created { formatDate(props.row.get('created')) }
            </span>
          </div>
        </div>
        <div class="col-lg-5 text-overflow d-flex align-items-center">
          <div class="w-100">
            <div each={ (line, i) in props.row.get('lines') } is={ `product-${getLine(line).product.type}-line` } line={ getLine(line) } />
          </div>
        </div>
        <div class="col-lg-3 text-right d-flex align-items-center">
          <div class="w-100">
            <span class={ classes({ 'btn mr-3' : true, 'btn-success' : props.row.get('invoice').paid && props.row.get('status') !== 'completed', 'btn-info' : props.row.get('status') === 'paid', 'btn-danger' : !props.row.get('invoice').paid }) }>
              { get('i18n.t')(`order.status.${props.row.get('status')}`) }
            </span>

            <div class="btn-group">
              <a href={ `/order/${props.row.get('id')}` } class="btn btn-info">
                <i class="fa fa-eye" />
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // import base
    import Base from '../js/base';
    import moment from 'moment';

    // export default
    export default class OrderRow extends Base {

      /**
       * formats date
       *
       * @param  {Date} date
       *
       * @return {String}
       */
      formatDate(date) {
        // return string
        return moment(date).fromNow();
      }

      /**
      * gets line
      *
      * @param  {Object} line
      *
      * @return {Object}
      */
      getLine(line) {
        // set new line
        line = Object.assign({}, line);

        // return line
        line.product = this.props.row.get('products').find((product) => product.id === line.product);

        // return line
        return line;
      }
    }

  </script>
</order-row>
